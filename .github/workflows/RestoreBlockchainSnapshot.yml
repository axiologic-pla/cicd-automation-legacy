name: 'Restore Blockchain Snapshot'

on:
  workflow_dispatch:
    inputs:
      networkName:
        description: 'Enter the network name'
        required: true
        type: string
      clusterAlias:
        description: 'Enter the name of your cluster'
        required: true
        type: string

      snapshotName:
        description: "Enter the snapshot name"
        required: true
        type: string
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  restoreSnapshot:
    name: 'Restore Blockchain Snapshot'
    runs-on: ubuntu-latest
    environment: production
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Set env variables
        run: |
          echo "PVC_FILE_PATH=./pvc.yaml" >> $GITHUB_ENV
      - name: Set env variables
        run: |
          echo "REGION_FILE_PATH=./private/${{ github.event.inputs.clusterAlias }}/${{ github.event.inputs.networkName }}/region" >> $GITHUB_ENV
      # Checkout the repository to the GitHub Actions runner
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
      - name: Read region
        run: |
          echo "REGION=$(cat $REGION_FILE_PATH)" >> $GITHUB_ENV

      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_GH_ACTIONS_ROLE }}
          aws-region: ${{env.REGION}}
      - name: Connect to cluster
        run: |
            aws eks --region ${{env.REGION}} update-kubeconfig --name ${{ github.event.inputs.clusterAlias }}
            
      - name: Install kubectl 
        uses: azure/setup-kubectl@v3
        
      - name: Delete existing epi pvc
        run: |
          kubectl scale deployment quorum --replicas=0
          kubectl delete pvc quorum-data

      - name: Generate snapshot manifest
        run: |
          echo $PVC_FILE_PATH
          echo "apiVersion: v1" >> $PVC_FILE_PATH
          echo "kind: PersistentVolumeClaim" >>  $PVC_FILE_PATH
          echo "metadata:" >>  $PVC_FILE_PATH
          echo "name: quorum-data" >> $PVC_FILE_PATH
          sed -i 's/\(name:\)/\  \1/' $PVC_FILE_PATH
          echo "spec:" >>  $PVC_FILE_PATH          
          echo "accessModes:" >> $PVC_FILE_PATH          
          sed -i 's/\(accessModes:\)/\  \1/' $PVC_FILE_PATH
          echo "- ReadWriteOnce" >>  $PVC_FILE_PATH          
          sed -i 's/\(- ReadWriteOnce\)/\  \1/' $PVC_FILE_PATH
          echo "resources:" >> $PVC_FILE_PATH          
          sed -i 's/\(resources:\)/\  \1/' $PVC_FILE_PATH
          echo "requests:" >> $PVC_FILE_PATH
          sed -i 's/\(requests\)/\  \1/' $PVC_FILE_PATH
          sed -i 's/\(requests\)/\  \1/' $PVC_FILE_PATH
          echo "storage: 3Gi" >> $PVC_FILE_PATH
          sed -i 's/\(storage\)/\  \1/' $PVC_FILE_PATH
          sed -i 's/\(storage\)/\  \1/' $PVC_FILE_PATH
          sed -i 's/\(storage\)/\  \1/' $PVC_FILE_PATH
          echo "dataSource:" >> $PVC_FILE_PATH
          sed -i 's/\(dataSource\)/\  \1/' $PVC_FILE_PATH
          echo "name: ${{github.event.inputs.snapshotName}}" >> $PVC_FILE_PATH
          sed -i 's/\(name\)/\  \1/' $PVC_FILE_PATH
          sed -i 's/\(name\)/\  \1/' $PVC_FILE_PATH
          echo "kind: VolumeSnapshot" >> $PVC_FILE_PATH
          sed -i 's/\(kind: VolumeSnapshot\)/\  \1/' $PVC_FILE_PATH
          sed -i 's/\(kind: VolumeSnapshot\)/\  \1/' $PVC_FILE_PATH
          echo "apiGroup: snapshot.storage.k8s.io" >> $PVC_FILE_PATH
          sed -i 's/\(apiGroup\)/\  \1/' $PVC_FILE_PATH
          sed -i 's/\(apiGroup\)/\  \1/' $PVC_FILE_PATH
      - name: List content repo
        run: |
          cat ./$PVC_FILE_PATH
          ls -la 

      - name: Restore Blockchain Snapshot
        run: |
          kubectl apply -f $PVC_FILE_PATH

      - name: Restart quorum node
        run: |
          kubectl scale deployment quorum --replicas=1          

      - name: List pvcs
        run: |
          kubectl get pvc

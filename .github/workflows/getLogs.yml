name: 'Get Logs'

on:
  workflow_dispatch:
    inputs:
      networkName:
        description: 'Enter the network name'
        required: true
        type: string
      clusterAlias:
        description: 'Enter the name of your cluster'
        required: true
        type: string
      targetComponent:
        description: 'Select component'
        required: true
        type: choice
        options:
        - apihub
        - ethadapter
        - quorum
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  getLogs:
    name: 'Retrieving the logs for selected component'
    runs-on: ubuntu-latest
    environment: production
    
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Set env variables
        run: |
          echo "REGION_FILE_PATH=./private/${{ github.event.inputs.networkName }}/${{ github.event.inputs.clusterAlias }}/region" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GIT_TOKEN }}
          
      - name: Read region
        run: |
          echo "REGION=$(cat $REGION_FILE_PATH)" >> $GITHUB_ENV
          
      - name: Configure AWS Credentials Action For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_GH_ACTIONS_ROLE }}
          aws-region: ${{env.REGION}}
          
      - name: Connect to cluster
        run: |
            aws eks --region ${{env.REGION}} update-kubeconfig --name ${{ github.event.inputs.clusterAlias }}

      - name: Install kubectl 
        uses: azure/setup-kubectl@v3
        
      - name: Preparing the script
        run: |
          cat > getLogs.sh << EOF
          selector="app.kubernetes.io/name=epi"
          case ${{ github.event.inputs.targetComponent }} in
            "apihub")
              selector="app.kubernetes.io/name=epi"
              ;;

            "ethadapter")
              selector="app.kubernetes.io/name=ethadapter"
              ;;

            "quorum")
              selector="app.kubernetes.io/name=quorum"
              ;;
          esac
          podName="\$(kubectl get pods --selector=\$selector -o custom-columns="POD-NAME":.metadata.name --no-headers)"
          kubectl logs \$podName
          EOF
          
      - name: Set permissions
        run: chmod 755 getLogs.sh
        
      - name: Retrieving the logs
        run: ./getLogs.sh

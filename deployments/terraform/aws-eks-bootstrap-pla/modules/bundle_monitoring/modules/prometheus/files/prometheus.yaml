alertmanager:
  enabled: true

  ## Alertmanager Deployment Strategy type
  strategy:
    type: Recreate

  ## PodDisruptionBudget settings
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
  ##
  podDisruptionBudget:
    enabled: true
    maxUnavailable: 1

  persistentVolume:
    ## If true, alertmanager will create/use a Persistent Volume Claim
    ## If false, use emptyDir
    ##
    enabled: true

    ## alertmanager data Persistent Volume size
    ##
    size: 2Gi

  emptyDir:
    ## alertmanager emptyDir volume size limit
    ##
    sizeLimit: "2Gi"

  ## Use a StatefulSet if replicaCount needs to be greater than 1 (see below)
  ##
  replicaCount: 1

  ## alertmanager resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    limits:
      cpu: 10m
      memory: 32Mi
    requests:
      cpu: 10m
      memory: 32Mi

  securityContext:
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContext:
    privileged: false
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL

configmapReload:
  prometheus:
    containerSecurityContext:
      privileged: false
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL

    resources:
      limits:
        cpu: 10m
        memory: 32Mi
      requests:
        cpu: 10m
        memory: 32Mi

  alertmanager:
    containerSecurityContext:
      privileged: false
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL

    resources:
      limits:
        cpu: 10m
        memory: 32Mi
      requests:
        cpu: 10m
        memory: 32Mi

## kube-state-metrics sub-chart configurable values
## Please see https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-state-metrics
##
kube-state-metrics:
  resources:
    limits:
      cpu: 100m
      memory: 64Mi
    requests:
      cpu: 20m
      memory: 64Mi

  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContext:
    privileged: false
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL

nodeExporter:
  ## If false, node-exporter will not be installed
  ##
  enabled: true

  ## PodDisruptionBudget settings
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
  ##
  podDisruptionBudget:
    enabled: false
    maxUnavailable: 1

  ## node-exporter resource limits & requests
  ## Ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    limits:
      cpu: 200m
      memory: 50Mi
    requests:
      cpu: 100m
      memory: 30Mi

  container:
    securityContext:
      privileged: false
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL

  securityContext:
    seccompProfile:
      type: RuntimeDefault

server:
  enabled: true

  image:
    repository: quay.io/prometheus/prometheus
    tag: v2.38.0  # 2022-Aug-16

  extraFlags:
    - web.enable-lifecycle
    ## web.enable-admin-api flag controls access to the administrative HTTP API which includes functionality such as
    ## deleting time series. This is disabled by default.
    # - web.enable-admin-api
    ##
    ## storage.tsdb.no-lockfile flag controls BD locking
    # - storage.tsdb.no-lockfile
    ##
    ## storage.tsdb.wal-compression flag enables compression of the write-ahead log (WAL)
    - storage.tsdb.wal-compression

  global:
    ## How frequently to scrape targets by default
    ##
    scrape_interval: 30s
    ## How long until a scrape request times out
    ##
    scrape_timeout: 10s
    ## How frequently to evaluate rules
    ##
    evaluation_interval: 1m

  ## Additional Prometheus server container arguments
  ##
  extraArgs:
    # https://www.robustperception.io/new-features-in-prometheus-2-5-0
    # 512MB / 16 = 33554432
    query.max-samples: "33554432"

  ## Server Deployment Strategy type
  strategy:
    type: Recreate

  ## PodDisruptionBudget settings
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
  ##
  podDisruptionBudget:
    enabled: true
    maxUnavailable: 1

  persistentVolume:
    ## Prometheus server data Persistent Volume size
    ##
    size: 8Gi

  ## Prometheus server resource requests and limits
  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    limits:
      cpu: 500m
      memory: 1500Mi
    requests:
      cpu: 100m
      memory: 1500Mi

  securityContext:
    seccompProfile:
      type: RuntimeDefault

  containerSecurityContext:
    privileged: false
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL

  ## Prometheus data retention period (default if not specified is 15 days)
  ##
  retention: "15d"

# https://prometheus.io/docs/practices/pushing/
pushgateway:
  ## If false, pushgateway will not be installed
  ##
  enabled: false
